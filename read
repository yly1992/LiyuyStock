import talib

def initialize(context):
    context.spy = sid(8554)
    schedule_function(ma_crossover_handling,
                      date_rules.every_day(),
                      time_rules.market_open(hours=1))
    
def ma_crossover_handling(context,data):
    bar_interval = '1d' 
    #time period
    #3，5，8，10，12，15
    #30，35，40，45，50，55
    slow_ema_length = 65
    fast_ema_length = 10  
    
    bar_count_1 = 1000  # <- this valoe should be at least 5 times more then slow_ema_length 
    
    hist = data.history(context.spy, 'price', bar_count_1, '1d')
    
    slow_ema_1 = talib.EMA(hist, slow_ema_length) 
    fast_ema_1 = talib.EMA(hist, fast_ema_length)
    
    emaSlow = slow_ema_1[-1]
    emaFast = fast_ema_1[-1]
      
    open_orders = get_open_orders()
    
    if (emaFast >  emaSlow):
       if context.spy not in open_orders:
            order_target_percent(context.spy, 1.0)
    elif (emaFast <  emaSlow): 
       if context.spy not in open_orders:
            order_target_percent(context.spy, 0)
    
    record(fast_ema = emaFast, slow_ema = emaSlow)


    
    # if sma_20 > sma_50:
    #     if context.spy not in open_orders:
    #         order_target_percent(context.spy, 1.0)
    # elif sma_50 > sma_20:
    #     if context.spy not in open_orders:
    #         order_target_percent(context.spy, 0)
            
    record(leverage = context.account.leverage)
